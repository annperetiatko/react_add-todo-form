{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","email","name","className","href","TodoInfo","id","title","completed","user","classNames","TodoList","todos","map","todo","userId","username","getUser","usersFromServer","find","validateTheTitle","value","replace","App","useState","setTitle","setUserId","todoList","setTodos","titleError","setTitleError","userError","setUserError","action","method","onSubmit","event","preventDefault","newTodo","Math","max","htmlFor","type","placeholder","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91c77c3f.chunk.js","sourcesContent":["type Props = {\n  name: string,\n  email: string,\n};\n\nexport const UserInfo:React.FC<Props> = ({\n  email,\n  name,\n}) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { User } from '../../types/User';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  id: number,\n  title: string,\n  completed: boolean,\n  user: User | null,\n};\n\nexport const TodoInfo:React.FC<Props> = ({\n  id,\n  title,\n  completed,\n  user,\n}) => {\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo name={user.name} email={user.email} />\n      )}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList:React.FC<Props> = ({ todos = [] }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          id={todo.userId}\n          title={todo.title}\n          key={todo.id}\n          user={todo.user}\n          completed={todo.completed}\n        />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nfunction validateTheTitle(value: string) {\n  return value.replace(/[^а-яА-ЯёЁ\\w\\d\\s$]/g, '');\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [todoList, setTodos] = useState(todos);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitleError(false);\n\n    if (validateTheTitle(event.target.value) !== ' ') {\n      setTitle(validateTheTitle(event.target.value));\n    }\n  };\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserError(false);\n    setUserId(+event.target.value);\n  };\n\n  const addTodo = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title) {\n      setTitleError(true);\n    }\n\n    if (!userId) {\n      setUserError(true);\n    }\n\n    if (title && userId) {\n      const newTodoId = Math.max(...todoList.map(todo => todo.id));\n\n      const newTodo: Todo = {\n        id: newTodoId + 1,\n        title,\n        completed: false,\n        userId,\n        user: getUser(userId),\n      };\n\n      setTodos([...todoList, newTodo]);\n      setTitle('');\n      setUserId(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={addTodo}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">Title: </label>\n          <input\n            id=\"titleInput\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleInputChange}\n          />\n\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"selectedUser\">User: </label>\n          <select\n            id=\"selectedUser\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleSelectChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {userError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todoList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}